// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: chatpdf.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chatpdf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key         string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	UserID      string                 `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
	ContentType string                 `protobuf:"bytes,5,opt,name=contentType,proto3" json:"contentType,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Chatpdf) Reset() {
	*x = Chatpdf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatpdf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chatpdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chatpdf) ProtoMessage() {}

func (x *Chatpdf) ProtoReflect() protoreflect.Message {
	mi := &file_chatpdf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chatpdf.ProtoReflect.Descriptor instead.
func (*Chatpdf) Descriptor() ([]byte, []int) {
	return file_chatpdf_proto_rawDescGZIP(), []int{0}
}

func (x *Chatpdf) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chatpdf) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chatpdf) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Chatpdf) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Chatpdf) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Chatpdf) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Chatpdf) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetContextReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId string `protobuf:"bytes,1,opt,name=chatId,proto3" json:"chatId,omitempty"`
	Query  string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetContextReq) Reset() {
	*x = GetContextReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatpdf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextReq) ProtoMessage() {}

func (x *GetContextReq) ProtoReflect() protoreflect.Message {
	mi := &file_chatpdf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextReq.ProtoReflect.Descriptor instead.
func (*GetContextReq) Descriptor() ([]byte, []int) {
	return file_chatpdf_proto_rawDescGZIP(), []int{1}
}

func (x *GetContextReq) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *GetContextReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetContextRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context string `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *GetContextRes) Reset() {
	*x = GetContextRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatpdf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContextRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContextRes) ProtoMessage() {}

func (x *GetContextRes) ProtoReflect() protoreflect.Message {
	mi := &file_chatpdf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContextRes.ProtoReflect.Descriptor instead.
func (*GetContextRes) Descriptor() ([]byte, []int) {
	return file_chatpdf_proto_rawDescGZIP(), []int{2}
}

func (x *GetContextRes) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

type CreateChatpdfReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk       []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ContentType string `protobuf:"bytes,3,opt,name=contentType,proto3" json:"contentType,omitempty"`
}

func (x *CreateChatpdfReq) Reset() {
	*x = CreateChatpdfReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatpdf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChatpdfReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChatpdfReq) ProtoMessage() {}

func (x *CreateChatpdfReq) ProtoReflect() protoreflect.Message {
	mi := &file_chatpdf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChatpdfReq.ProtoReflect.Descriptor instead.
func (*CreateChatpdfReq) Descriptor() ([]byte, []int) {
	return file_chatpdf_proto_rawDescGZIP(), []int{3}
}

func (x *CreateChatpdfReq) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *CreateChatpdfReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateChatpdfReq) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

var File_chatpdf_proto protoreflect.FileDescriptor

var file_chatpdf_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x70, 0x64, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xed, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x74, 0x70, 0x64, 0x66, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x3d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x29, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x5e, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x70, 0x64, 0x66, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x32, 0xc5, 0x02, 0x0a,
	0x0e, 0x43, 0x68, 0x61, 0x74, 0x70, 0x64, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x32, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x70, 0x64, 0x66,
	0x73, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x70, 0x64, 0x66, 0x30, 0x01, 0x12, 0x35,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x70, 0x64, 0x66, 0x12,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x70,
	0x64, 0x66, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x70, 0x64, 0x66, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x6c, 0x6f, 0x73, 0x43, 0x41, 0x43, 0x42, 0x33, 0x33, 0x33,
	0x2f, 0x63, 0x62, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_chatpdf_proto_rawDescOnce sync.Once
	file_chatpdf_proto_rawDescData = file_chatpdf_proto_rawDesc
)

func file_chatpdf_proto_rawDescGZIP() []byte {
	file_chatpdf_proto_rawDescOnce.Do(func() {
		file_chatpdf_proto_rawDescData = protoimpl.X.CompressGZIP(file_chatpdf_proto_rawDescData)
	})
	return file_chatpdf_proto_rawDescData
}

var file_chatpdf_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_chatpdf_proto_goTypes = []interface{}{
	(*Chatpdf)(nil),               // 0: pb.Chatpdf
	(*GetContextReq)(nil),         // 1: pb.GetContextReq
	(*GetContextRes)(nil),         // 2: pb.GetContextRes
	(*CreateChatpdfReq)(nil),      // 3: pb.CreateChatpdfReq
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*EmptyReq)(nil),              // 5: pb.EmptyReq
	(*GenericReq)(nil),            // 6: pb.GenericReq
	(*GenericRes)(nil),            // 7: pb.GenericRes
}
var file_chatpdf_proto_depIdxs = []int32{
	4, // 0: pb.Chatpdf.createdAt:type_name -> google.protobuf.Timestamp
	4, // 1: pb.Chatpdf.updatedAt:type_name -> google.protobuf.Timestamp
	1, // 2: pb.ChatpdfService.GetContext:input_type -> pb.GetContextReq
	1, // 3: pb.ChatpdfService.GetContextWithoutAuth:input_type -> pb.GetContextReq
	5, // 4: pb.ChatpdfService.GetChatpdfs:input_type -> pb.EmptyReq
	3, // 5: pb.ChatpdfService.CreateChatpdf:input_type -> pb.CreateChatpdfReq
	6, // 6: pb.ChatpdfService.DeleteChatpdf:input_type -> pb.GenericReq
	6, // 7: pb.ChatpdfService.GetFileUrl:input_type -> pb.GenericReq
	2, // 8: pb.ChatpdfService.GetContext:output_type -> pb.GetContextRes
	2, // 9: pb.ChatpdfService.GetContextWithoutAuth:output_type -> pb.GetContextRes
	0, // 10: pb.ChatpdfService.GetChatpdfs:output_type -> pb.Chatpdf
	7, // 11: pb.ChatpdfService.CreateChatpdf:output_type -> pb.GenericRes
	7, // 12: pb.ChatpdfService.DeleteChatpdf:output_type -> pb.GenericRes
	7, // 13: pb.ChatpdfService.GetFileUrl:output_type -> pb.GenericRes
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chatpdf_proto_init() }
func file_chatpdf_proto_init() {
	if File_chatpdf_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chatpdf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chatpdf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatpdf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatpdf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContextRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatpdf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChatpdfReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chatpdf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chatpdf_proto_goTypes,
		DependencyIndexes: file_chatpdf_proto_depIdxs,
		MessageInfos:      file_chatpdf_proto_msgTypes,
	}.Build()
	File_chatpdf_proto = out.File
	file_chatpdf_proto_rawDesc = nil
	file_chatpdf_proto_goTypes = nil
	file_chatpdf_proto_depIdxs = nil
}
