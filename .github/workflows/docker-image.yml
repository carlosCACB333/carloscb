name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git Semantic Version
        uses: PaulHatch/semantic-version@v5.2.1
        id: version
        with:
          tag_prefix: "v"
          bump_each_commit: true
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"

      - name: set env variables
        run: |
          echo "STAGE=production" >> .env
          echo "NEXT_PUBLIC_CLERK_SIGN_IN_URL=/auth/sign-in" >> .env
          echo "NEXT_PUBLIC_CLERK_SIGN_UP_URL=/auth/sign-up" >> .env

          echo "SITE_URL=${{ secrets.SITE_URL }}" >> .env
          echo "AUTHOR_EMAIL=${{ secrets.EMAIL_USER }}" >> .env
          echo "GRAPHCMS_URL=${{ secrets.GRAPHCMS_URL }}" >> .env
          echo "GRAPHCMS_KEY=${{ secrets.GRAPHCMS_KEY }}" >> .env
          echo "GRAPHCMS_TOKEN=${{ secrets.GRAPHCMS_TOKEN }}" >> .env
          echo "NEXT_PUBLIC_X_API_KEY=${{ secrets.NEXT_PUBLIC_X_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_GRAPHCMS_MEDIA=${{ secrets.NEXT_PUBLIC_GRAPHCMS_MEDIA }}" >> .env
          echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}" >> .env

          echo "FRONT_IMAGE=${{ secrets.DOCKERHUB_USER }}/carloscb-front:${{ steps.version.outputs.version }}" >> $GITHUB_ENV
          echo "BACK_IMAGE=${{ secrets.DOCKERHUB_USER }}/carloscb-back:${{ steps.version.outputs.version }}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push front image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.FRONT_IMAGE }}
          target: production

      - name: Build and push back image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.BACK_IMAGE }}
          target: production
